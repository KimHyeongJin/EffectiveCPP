항목 15: 자원 관리 클래스에서 관리되는 자원은 외부에서 접근할 수 있도록 하자

자원 관리 클래스는 재치 만발의 듬직한 클래스입니다. 실수로 터질 수 있는 자원 누출을
튼튼히 막아 주는 보호벽 역할을 해 주니까요. 똑바로 설계된 시스템이라면 자원 누출이 없
어야 한다는 것은 기본적으로 갖추어야 할 덕목 아니겠습니까. 사실 우리네 세상이 순하게
살아도 아무 문제가 없는 세상이라면, 자원을 가지고 어떻게 해야 할 때 이런 클래스만 사용
해도 될 것입니다. 굳이 직접 실제 자원을 조작하느라 손을 더럽힐 이유가 없잖아요. 그런데
세상은 그리 만만하지 않습니다. 이미 현장에서 열심히 쓰이고 있는 수많은 API 들이 자원을
직접 참조하도록 만들어져 있어서, 하늘이 두 조각 나더라도 이것들을 안 쓰겠다고 마음
먹지 않는다면(이럴 일이 거의 없긴 하지요), 자원 관리 객체의 보호벽을 슬그머니 넘어가서
실제 자원을 직접 주물러야 할 일이 더러 있을 것입니다.

혹시 항목 13을 읽어 보셨나요? createInvestment 등의 팩토리 함수를 호출한 결과
(포인터)를 담기 위해 auto_ptr 혹은 tr1::shared_ptr과 같은 스마트 포인터를 사용
하는 아이디어가 소개되었었죠.

// 항목 13에서 가져온 예제
std::tr1::shared_ptr<Investment>pInv(createInvestment());

이때 어떤 Investment 객체를 사용하는 함수로서 여러분이 시용하려고 하는 것이 다음
과 같다고 가정해 봅시다.

int daysHeld(const Investment* pi);	// 투자금이 유입된 이후로 경과한 날수